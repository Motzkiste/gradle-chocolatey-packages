<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
  <metadata>
    <id>gradle</id>
    <title>Gradle</title>
    <version>4.5</version>
    <authors>Gradle Inc.</authors>
    <owners>Patrick Brochado</owners>
    <summary>Gradle is a modern open source polyglot build automation system. It can automate and integrate your devOps toolchain with a concise and expressive build programming language based upon the concepts of Apache Ant and Apache Maven.</summary>
    <description>Gradle combines the power and flexibility of Apache Ant with the dependency management and conventions of Apache Maven into a more effective way to build. Powered by a Groovy DSL and packed with innovation, Gradle provides a declarative way to describe all kinds of builds through sensible defaults. Gradle is quickly becoming the build system of choice for many open source projects, leading edge enterprises and legacy automation challenges.

Gradle is a build tool with a focus on build automation and support for multi-language development. If you are building, testing, publishing, and deploying software on any platform, Gradle offers a flexible model that can support the entire development lifecycle from compiling and packaging code to publishing web sites. Gradle has been designed to support build automation across multiple languages and platforms including Java, Scala, Android, C/C++, and Groovy, and is closely integrated with development tools and continuous integration servers including Eclipse, IntelliJ, and Jenkins.

Learn more about what makes Gradle a compelling choice for build automation or get started with Gradle right now.</description>
    <projectUrl>http://gradle.org/</projectUrl>
    <tags>gradle java build automation management admin</tags>
    <copyright>© 2017 Gradle Inc.</copyright>
    <licenseUrl>http://www.gradle.org/license</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <iconUrl>https://upload.wikimedia.org/wikipedia/en/a/ab/Updated_logo_for_Gradle.png</iconUrl>
    <releaseNotes>The Gradle team is pleased to announce Gradle 4.5.

First and foremost, this release of Gradle features improvements to the build cache:

- Caching for C and C++ compilation is now stable.
- The ANTLR plugin now [takes advantage of the build cache](https://docs.gradle.org/4.5/release-notes.html#antlr-task-is-now-cacheable-by-default).
- A couple of rough edges to build cache behavior have been polished, [read more in the detailed release notes](https://docs.gradle.org/4.5/release-notes.html#build-cache).

In addition to cacheability improvements for native development, incremental compilation for C/C++ does finer-grained analysis of dependencies between source files and header files, which will result in fewer files compiled and a higher cache hit-rate. Read [details about C and C++ compilation improvements here](https://docs.gradle.org/4.5/release-notes.html#c/c++-compilation-improvements).

Now on to performance improvements everyone can enjoy: less memory consumption and faster up-to-date behavior. Gradle 4.5 features much more memory-efficient incremental compilation. Combined with less file canonicalization, faster task selection, and faster variant-aware dependency resolution, this results in up to 30% faster up-to-date checking. The improvement will be especially pronounced for projects with a large number of constants, as is typical in Android projects. For example, here are 2 snapshots comparing cross-build caches.

Next up, you can finally [sign artifacts using gnupg-agent](https://docs.gradle.org/4.5/release-notes.html#signing-artifacts-with-gpg-agent). Special thanks to [Christoph Böhme](https://github.com/cboehme) for contributing this highly-anticipated feature.

Documentation has been upgraded in this release, with use-case oriented examples for several highly trafficked pages, improved navigation, and a more pleasant experience in many ways. [Read details about the improvements](https://docs.gradle.org/4.5/release-notes.html#documentation-enhancements), or just start with the new [docs home page](https://docs.gradle.org/4.5/userguide/userguide.html).

Individual deprecation warnings are no longer displayed in console output by default, as many users often cannot take action on deprecation warnings from third party plugins. You can now [control the verbosity of logging deprecation warnings](https://docs.gradle.org/4.5/release-notes.html#reduced-deprecation-logging-in-console).

Last but not least, 2 Kotlin DSL updates:

-You can now [generate Gradle Kotlin DSL scripts](https://docs.gradle.org/4.5/release-notes.html#init-task-can-now-generate-kotlin-dsl-build-scripts) using gradle init --dsl kotlin.
-[Kotlin DSL v0.14](https://github.com/gradle/kotlin-dsl/releases/tag/v0.14.0) is included in this release of Gradle. It features code navigation to Gradle sources in IDEs with the Gradle binary distribution (not just -all anymore), embedded Kotlin upgraded to 1.2.0 and more.

We hope you will build happiness with Gradle 4.5, and we look forward to your feedback via [Twitter](https://twitter.com/gradle) or on [GitHub](https://github.com/gradle).</releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
