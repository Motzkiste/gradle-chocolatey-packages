<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
  <metadata>
    <id>gradle</id>
    <title>Gradle</title>
    <version>4.10</version>
    <authors>Gradle Inc.</authors>
    <owners>Patrick Brochado</owners>
    <summary>Gradle is a modern open source polyglot build automation system. It can automate and integrate your devOps toolchain with a concise and expressive build programming language based upon the concepts of Apache Ant and Apache Maven.</summary>
    <description>Gradle combines the power and flexibility of Apache Ant with the dependency management and conventions of Apache Maven into a more effective way to build. Powered by a Groovy DSL and packed with innovation, Gradle provides a declarative way to describe all kinds of builds through sensible defaults. Gradle is quickly becoming the build system of choice for many open source projects, leading edge enterprises and legacy automation challenges.

Gradle is a build tool with a focus on build automation and support for multi-language development. If you are building, testing, publishing, and deploying software on any platform, Gradle offers a flexible model that can support the entire development lifecycle from compiling and packaging code to publishing web sites. Gradle has been designed to support build automation across multiple languages and platforms including Java, Scala, Android, C/C++, and Groovy, and is closely integrated with development tools and continuous integration servers including Eclipse, IntelliJ, and Jenkins.

Learn more about what makes Gradle a compelling choice for build automation or get started with Gradle right now.</description>
    <projectUrl>http://gradle.org/</projectUrl>
    <tags>gradle java build automation management admin</tags>
    <copyright>© 2017 Gradle Inc.</copyright>
    <licenseUrl>http://www.gradle.org/license</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <iconUrl>https://raw.githubusercontent.com/gradle/gradle/master/gradle.png</iconUrl>
    <docsUrl>https://docs.gradle.org/current/userguide/userguide.html</docsUrl>
    <mailingListUrl>https://discuss.gradle.org/</mailingListUrl>
    <bugTrackerUrl>https://github.com/gradle/gradle/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/gradle/gradle</projectSourceUrl>
    <packageSourceUrl>https://github.com/rocklass/gradle-chocolatey-packages</packageSourceUrl>
    <releaseNotes>The Gradle team is pleased to announce Gradle 4.10. This is a big release.

First and foremost, this release of Gradle features an improved [incremental Java compiler, now enabled by default](https://docs.gradle.org/4.10/release-notes.html#incremental-java-compilation-by-default).
This will result in significantly reduced Java compilation time in subsequent builds when outputs are not up-to-date or resolved from the build cache.

Chances are caches in those .gradle/ directories have accumulated a few (or a few dozen) gigabytes over time.
If so, you'll be relieved to know that Gradle will now [periodically clean up unused /caches](https://docs.gradle.org/4.10/release-notes.html#periodic-cache-cleanup) under GRADLE_USER_HOME and project root directories.

A moment you have anticipated is nearly here, as the [Kotlin DSL reaches version 1.0 RC3](https://github.com/gradle/kotlin-dsl/releases/tag/v1.0-RC3).
Configuration avoidance, buildSrc refactoring propagation to the IDE, and lots of DSL polish make this the release to try.
Gradle Kotlin DSL 1.0 will ship with the next version of Gradle, 5.0.
Read [this blog post](https://blog.gradle.org/gradle-kotlin-dsl-release-candidate) for guidance on trying the Kotlin DSL and submitting feedback.

You can now use [SNAPSHOT plugin versions with the plugins {}](https://docs.gradle.org/4.10/release-notes.html#use-snapshot-plugin-versions-with-the-plugins-%7B%7D-block) and pluginManagement {} blocks.
This is especially good news for Kotlin DSL users, who will get code assistance and auto-completion for these SNAPSHOT plugins.
Special thanks to [Sébastien Deleuze](https://github.com/sdeleuze) for contributing.

Last but not least, [included builds can now be nested](https://docs.gradle.org/4.10/release-notes.html#nested-included-builds).
This makes some common workflows more convenient, such as working on multiple source repositories at the same time to implement a cross-cutting feature.

We hope you will build happiness with Gradle 4.10, and we look forward to your feedback [via Twitter](https://twitter.com/gradle) or [on GitHub](https://github.com/gradle).</releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
